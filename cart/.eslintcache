[{"C:\\Users\\Sanjeev Gupta\\Desktop\\cart\\src\\index.js":"1","C:\\Users\\Sanjeev Gupta\\Desktop\\cart\\src\\App.js":"2","C:\\Users\\Sanjeev Gupta\\Desktop\\cart\\src\\CartItem.js":"3","C:\\Users\\Sanjeev Gupta\\Desktop\\cart\\src\\Cart.js":"4"},{"size":220,"mtime":1608323324861,"results":"5","hashOfConfig":"6"},{"size":182,"mtime":1608651934159,"results":"7","hashOfConfig":"6"},{"size":2173,"mtime":1608558049045,"results":"8","hashOfConfig":"6"},{"size":283,"mtime":1608652341157,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"xvkq2z",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"C:\\Users\\Sanjeev Gupta\\Desktop\\cart\\src\\index.js",[],["21","22"],"C:\\Users\\Sanjeev Gupta\\Desktop\\cart\\src\\App.js",[],"C:\\Users\\Sanjeev Gupta\\Desktop\\cart\\src\\CartItem.js",["23"],"import React from 'react';\r\n\r\nclass CartItem extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      price: 999,\r\n      title: 'Mobile Phone',\r\n      qty: 0,\r\n      img: ''\r\n    }\r\n    // this.increaseQuantity = this.increaseQuantity.bind(this);\r\n  }\r\n  decreaseQuantity=() => {\r\n    const{qty}=this.state;\r\n    if(qty===0){return;}\r\n    this.setState((prevState) => {\r\n      return {\r\n        qty: prevState.qty - 1\r\n      }\r\n    });\r\n\r\n  }\r\n  increaseQuantity = () => {\r\n    // this.state.qty += 1;\r\n    // console.log('this', this.state);\r\n    // setState form 1\r\n    // this.setState({\r\n    //   qty: this.state.qty + 1\r\n    // });\r\n\r\n    // setState form 2 - if prevState required use this\r\n    this.setState((prevState) => {\r\n      return {\r\n        qty: prevState.qty + 1\r\n      }\r\n    });\r\n  }\r\n  render () {\r\n    const { price, title, qty } = this.state;\r\n    return (\r\n      <div className=\"cart-item\">\r\n        <div className=\"left-block\">\r\n          <img style={styles.image} />\r\n        </div>\r\n        <div className=\"right-block\">\r\n          <div style={ { fontSize: 25 } }>{title}</div>\r\n          <div style={ { color: '#777' } }>Rs {price} </div>\r\n          <div style={ { color: '#777' } }>Qty: {qty} </div>\r\n          <div className=\"cart-item-actions\">\r\n            {/* Buttons */}\r\n            <img\r\n              alt=\"increase\"\r\n              className=\"action-icons\"\r\n              src=\"https://image.flaticon.com/icons/svg/992/992651.svg\"\r\n              onClick={this.increaseQuantity}\r\n            />\r\n            <img\r\n              alt=\"decrease\"\r\n              className=\"action-icons\"\r\n              src=\"https://image.flaticon.com/icons/svg/1665/1665612.svg\"\r\n              onClick={this.decreaseQuantity}\r\n            />\r\n            <img\r\n              alt=\"delete\"\r\n              className=\"action-icons\"\r\n              src=\"https://image.flaticon.com/icons/svg/1214/1214428.svg\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  image: {\r\n    height: 110,\r\n    width: 110,\r\n    borderRadius: 4,\r\n    background: '#ccc'\r\n  }\r\n}\r\n\r\nexport default CartItem;",["24","25"],"C:\\Users\\Sanjeev Gupta\\Desktop\\cart\\src\\Cart.js",[],{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":44,"column":11,"nodeType":"32","endLine":44,"endColumn":39},{"ruleId":"26","replacedBy":"33"},{"ruleId":"28","replacedBy":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["35"],["36"],"no-global-assign","no-unsafe-negation"]